name: Validate Winget Apps Backup Scripts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install winget
      run: |
        $progressPreference = 'silentlyContinue'
        Write-Information "Downloading WinGet and its dependencies..."
        Invoke-WebRequest -Uri https://aka.ms/getwinget -OutFile Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle
        Invoke-WebRequest -Uri https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx -OutFile Microsoft.VCLibs.x64.14.00.Desktop.appx
        Invoke-WebRequest -Uri https://github.com/microsoft/microsoft-ui-xaml/releases/download/v2.7.3/Microsoft.UI.Xaml.2.7.x64.appx -OutFile Microsoft.UI.Xaml.2.7.x64.appx
        Add-AppxPackage Microsoft.VCLibs.x64.14.00.Desktop.appx
        Add-AppxPackage Microsoft.UI.Xaml.2.7.x64.appx
        Add-AppxPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle

    - name: Verify winget installation
      run: |
        winget --version

    - name: Update winget source
      run: |
        winget source update

    - name: Pre-install some apps
      run: |
        winget install Microsoft.PowerShell --silent
        winget install Microsoft.VisualStudioCode --silent
        winget install Mozilla.Firefox --silent
      continue-on-error: true

    - name: Run ExportInstalledApps.ps1
      run: |
        powershell -ExecutionPolicy Bypass -File ./data/ExportInstalledApps.ps1
      
    - name: Check if InstalledWingetApps.json was created
      run: |
        if (Test-Path ./data/InstalledWingetApps.json) {
          Write-Host "InstalledWingetApps.json was successfully created."
          Get-Content ./data/InstalledWingetApps.json
        } else {
          Write-Host "Error: InstalledWingetApps.json was not created."
          exit 1
        }
      
    - name: Run InstallAppsFromJson.ps1
      run: |
        powershell -ExecutionPolicy Bypass -File ./data/InstallAppsFromJson.ps1
      
    - name: Verify installed apps
      run: |
        $appsToInstall = Get-Content -Path "./data/InstalledWingetApps.json" | ConvertFrom-Json
        foreach ($app in $appsToInstall) {
          $installedApp = winget list --id $app.Id
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Error: $($app.Name) (ID: $($app.Id)) was not installed."
            exit 1
          } else {
            Write-Host "$($app.Name) (ID: $($app.Id)) is installed."
          }
        }
        Write-Host "All apps were successfully installed or updated."

    - name: Display final winget list
      run: |
        winget list